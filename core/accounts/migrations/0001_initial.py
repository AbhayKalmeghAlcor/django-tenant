# Generated by Django 4.2 on 2023-06-17 08:46

from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(default=None, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('phone_number', models.CharField(max_length=15, null=True)),
                ('manager_email', models.EmailField(max_length=254, null=True)),
                ('hire_date', models.DateField(null=True)),
                ('birth_date', models.DateField(null=True)),
                ('country', models.CharField(max_length=100, null=True)),
                ('department', models.CharField(max_length=200, null=True)),
                ('location', models.CharField(max_length=200, null=True)),
                ('role', models.CharField(max_length=200, null=True)),
                ('avtar', models.ImageField(blank=True, upload_to='photos/users')),
                ('user_mode', models.CharField(default='normal', max_length=20, null=True)),
                ('created_by', models.CharField(default='admin', max_length=100, null=True)),
                ('updated_by', models.CharField(default='admin', max_length=100, null=True)),
                ('allowance_boost', models.IntegerField(default=200)),
                ('points_available', models.IntegerField(default=0)),
                ('points_received', models.IntegerField(default=0)),
                ('points_redeemed', models.IntegerField(default=0)),
                ('achievements_notification', models.DateTimeField(auto_now=True)),
                ('activity_update_notification', models.DateTimeField(auto_now=True)),
                ('allowance_notification', models.DateTimeField(auto_now=True)),
                ('bonus_notification', models.DateTimeField(auto_now=True)),
                ('comments_notification', models.DateTimeField(auto_now=True)),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('last_login', models.DateTimeField(auto_now_add=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('is_authenticated', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
